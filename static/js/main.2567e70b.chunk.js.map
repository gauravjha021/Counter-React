{"version":3,"sources":["Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","state","itteration","increment","bind","decrement","reset","this","setState","className","onClick","Component","CounterBody","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAEaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAY,GAEd,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,MAAQ,EAAKA,MAAMF,KAAX,gBAPI,EADrB,6CAWE,WACEG,KAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,WAAYD,EAAMC,WAAa,QAbrC,uBAiBE,WACMK,KAAKN,MAAMC,WAAa,GAC1BK,KAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,WAAYD,EAAMC,WAAa,QApBvC,mBAyBE,WACEK,KAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,WAAaD,EAAMC,WAAa,QA3BtC,oBA+BE,WACE,OACE,gCACE,yCACA,mBAAGO,UAAU,MAAb,SAAoBF,KAAKN,MAAMC,aAC/B,wBAAQO,UAAU,MAAMC,QAASH,KAAKJ,UAAtC,eAGA,wBAAQM,UAAU,MAAMC,QAASH,KAAKF,UAAtC,eAGA,wBAAQI,UAAU,MAAMC,QAASH,KAAKD,MAAtC,2BA1CR,GAA6BK,aAkDhBC,EAAb,4JACE,WACE,OACE,qBAAKH,UAAU,cAAf,SACE,cAAC,EAAD,UAJR,GAAiCE,aCzClBE,MARf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2567e70b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itteration: 0,\r\n    };\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  increment() {\r\n    this.setState((state) => ({\r\n      itteration: state.itteration + 1,\r\n    }));\r\n  }\r\n\r\n  decrement() {\r\n    if (this.state.itteration > 0) {\r\n      this.setState((state) => ({\r\n        itteration: state.itteration - 1,\r\n      }));\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.setState((state) => ({\r\n      itteration: (state.itteration = 0),\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n        <p className=\"itt\">{this.state.itteration}</p>\r\n        <button className=\"Fab\" onClick={this.increment}>\r\n          +\r\n        </button>\r\n        <button className=\"Fab\" onClick={this.decrement}>\r\n          -\r\n        </button>\r\n        <button className=\"Fab\" onClick={this.reset}>\r\n          ‚ü≥\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class CounterBody extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"counterBody\">\r\n        <Counter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport { CounterBody } from \"./Counter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterBody />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}